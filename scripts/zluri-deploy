#!/usr/bin/env bash
set -euo pipefail

REPO="ZluriHQ/centralized-deployment"
WORKFLOW_FILE="deploy-feature-env.yaml"
CONFIG_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/deploy-feature-env.conf"

AVAILABLE_REPOS=(
  "workflow-service"
  "v1-dashboard"
  "dashboard-api"
  "zluri-n8n"
  "integrations-v1"
  "bull-scheduler"
  "Integration-queue-consumer"
  "workflows-lambda"
  "agenda-project"
  "all"
)

# --- Dependency checks (assume installed by Homebrew) ---
if ! command -v gh >/dev/null 2>&1; then
  echo "‚ùå GitHub CLI not found. Install via Homebrew: brew install gh"
  exit 1
fi

if ! command -v sk >/dev/null 2>&1; then
  echo "‚ö†Ô∏è  skim not found. Using fallback selection menu."
  USE_SK=0
else
  USE_SK=1
fi

# --- Auth check ---
if ! gh auth status >/dev/null 2>&1; then
  echo "‚ùå GitHub CLI not authenticated. Run: gh auth login"
  exit 1
fi

# --- Load last saved config ---
LAST_BRANCH=""
LAST_REPOS=""
if [[ -f "$CONFIG_FILE" ]]; then
  # shellcheck disable=SC1090
  source "$CONFIG_FILE"
fi

echo "======================================================="
echo " Select repos to deploy (TAB to multi-select, ENTER to confirm)"
echo "======================================================="

CHOICE_LIST=$(printf "%s\n" "${AVAILABLE_REPOS[@]}")

# Preselect last choices
PRESELECT_ARG=()
if [[ -n "$LAST_REPOS" ]]; then
  IFS=',' read -ra PRESELECT_ITEMS <<< "$LAST_REPOS"
  for item in "${PRESELECT_ITEMS[@]}"; do
    PRESELECT_ARG+=(--preselect-items "$item")
  done
fi

# --- Repo selection ---
if [[ "$USE_SK" -eq 1 ]]; then
  CHOICES=$(echo "$CHOICE_LIST" | sk --multi --bind "tab:toggle+down" "${PRESELECT_ARG[@]}")
else
  echo "Available repos:"
  select choice in "${AVAILABLE_REPOS[@]}"; do
    CHOICES="$choice"
    break
  done
fi

if [[ -z "$CHOICES" ]]; then
  echo "‚ùå No repos selected. Exiting."
  exit 1
fi

if echo "$CHOICES" | grep -q "^all$"; then
  SELECTED_REPOS="all"
else
  SELECTED_REPOS=$(echo "$CHOICES" | paste -sd "," -)
fi

# --- Branch input ---
read -rp "Enter feature branch name (branch_name) [${LAST_BRANCH:-}]: " BRANCH_NAME
BRANCH_NAME="${BRANCH_NAME:-$LAST_BRANCH}"

if [[ -z "$BRANCH_NAME" ]]; then
  echo "‚ùå branch_name is required"
  exit 1
fi

# --- Save config ---
mkdir -p "$(dirname "$CONFIG_FILE")"
cat > "$CONFIG_FILE" <<EOF
LAST_BRANCH="$BRANCH_NAME"
LAST_REPOS="$SELECTED_REPOS"
EOF

# --- Trigger GitHub workflow ---
echo ""
echo "üöÄ Triggering workflow..."
echo "  Repo:          $REPO"
echo "  Workflow file: $WORKFLOW_FILE"
echo "  branch_name:   $BRANCH_NAME"
echo "  repo_names:    $SELECTED_REPOS"
echo ""

gh workflow run "$WORKFLOW_FILE" \
  --repo "$REPO" \
  --ref feature/create-env-config \
  --field branch_name="$BRANCH_NAME" \
  --field repo_names="$SELECTED_REPOS"
